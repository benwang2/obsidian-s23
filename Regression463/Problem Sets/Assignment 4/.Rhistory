modeling_no_outliers = modeling[modeling$Alcohol_Percentage >= 0,]
plot(
Alcohol_Percentage ~ Temperature, data=modeling_no_outliers,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
modeling_no_outliers_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers)
abline(modeling_no_outliers_lm, col="red")
summary(modeling_no_outliers_lm)
validation = read.table("./validation_data.txt",sep="\t",header=TRUE)
predicted = predict(modeling_no_outliers_lm, data.frame(Temperature=validation[,1]))
comparison = data.frame(Predicted=predicted, Observed=validation[,2])
comparison_lm = lm(Predicted ~ Observed, data=comparison)
plot(Predicted ~ Observed, data=comparison,pch=20)
abline(comparison_lm,col="red")
cor(comparison$Observed, comparison$Predicted)
modeling_no_outliers_residuals = resid(modeling_no_outliers_lm)
modeling_weights = 1 / modeling_no_outliers_residuals^2
wls_model = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers, weights=modeling_weights)
plot(
Alcohol_Percentage ~ Temperature, data=modeling,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
abline(modeling_lm,col="red")
abline(wls_model,col="blue",lwd=2)
summary(wls_model)
modeling_no_outliers_residuals = resid(modeling_no_outliers_lm)
modeling_weights = 1 / modeling_no_outliers_residuals^2
wls_model = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers, weights=modeling_weights)
plot(
Alcohol_Percentage ~ Temperature, data=modeling,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
abline(modeling_lm,col="red")
abline(wls_model,col="blue",lwd=2)
summary(wls_model)
knitr::opts_chunk$set(echo = TRUE)
modeling = read.table("./modeling_data.txt",sep="\t",header=TRUE)
modeling_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling)
plot(
Alcohol_Percentage ~ Temperature, data=modeling,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
abline(modeling_lm,col="red")
qqnorm(resid(modeling_lm),ylim=c(-1,2))
qqline(resid(modeling_lm),col="red")
modeling_no_outliers = modeling[modeling$Alcohol_Percentage >= 0,]
plot(
Alcohol_Percentage ~ Temperature, data=modeling_no_outliers,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
modeling_no_outliers_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers)
abline(modeling_no_outliers_lm, col="red")
summary(modeling_no_outliers_lm)
validation = read.table("./validation_data.txt",sep="\t",header=TRUE)
predicted = predict(modeling_no_outliers_lm, data.frame(Temperature=validation[,1]))
comparison = data.frame(Predicted=predicted, Observed=validation[,2])
comparison_lm = lm(Predicted ~ Observed, data=comparison)
plot(Predicted ~ Observed, data=comparison,pch=20)
abline(comparison_lm,col="red")
cor(comparison$Observed, comparison$Predicted)
modeling_no_outliers_residuals = resid(modeling_no_outliers_lm)
# Look into: https://www.statology.org/weighted-least-squares-in-r/
modeling_weights = 1 / modeling_no_outliers_residuals^2
wls_model = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers, weights=modeling_weights)
plot(
Alcohol_Percentage ~ Temperature, data=modeling,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
abline(modeling_lm,col="red")
abline(wls_model,col="blue",lwd=2)
summary(wls_model)
predicted_wls = predict(wls_model, data.frame(Temperature=validation[,1]))
comparison_wls = data.frame(Predicted=predicted_wls, Observed=validation[,2])
comparison_wls_lm = lm(Predicted ~ Observed, data=comparison_wls)
plot(Predicted ~ Observed, data=comparison_wls,pch=20)
abline(comparison_wls_lm,col="blue",lwd=2)
summary(comparison_wls_lm)
cor(comparison_wls$Observed, comparison_wls$Predicted)
predicted_wls = predict(wls_model, data.frame(Temperature=validation[,1]))
comparison_wls = data.frame(Predicted=predicted_wls, Observed=validation[,2])
comparison_wls_lm = lm(Predicted ~ Observed, data=comparison_wls)
plot(Predicted ~ Observed, data=comparison_wls,pch=20)
abline(comparison_wls_lm,col="blue",lwd=2)
summary(comparison_wls_lm)
summary(modeling_no_outliers_lm)
cor(comparison_wls$Observed, comparison_wls$Predicted)
predicted_wls = predict(wls_transformed, data.frame(Temperature=validation[,1]))
knitr::opts_chunk$set(echo = TRUE)
modeling = read.table("./modeling_data.txt",sep="\t",header=TRUE)
modeling_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling)
plot(
Alcohol_Percentage ~ Temperature, data=modeling,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
abline(modeling_lm,col="red")
qqnorm(resid(modeling_lm),ylim=c(-1,2))
qqline(resid(modeling_lm),col="red")
modeling_no_outliers = modeling[modeling$Alcohol_Percentage >= 0,]
plot(
Alcohol_Percentage ~ Temperature, data=modeling_no_outliers,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
modeling_no_outliers_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers)
abline(modeling_no_outliers_lm, col="red")
summary(modeling_no_outliers_lm)
validation = read.table("./validation_data.txt",sep="\t",header=TRUE)
predicted = predict(modeling_no_outliers_lm, data.frame(Temperature=validation[,1]))
comparison = data.frame(Predicted=predicted, Observed=validation[,2])
comparison_lm = lm(Predicted ~ Observed, data=comparison)
plot(Predicted ~ Observed, data=comparison,pch=20)
abline(comparison_lm,col="red")
cor(comparison$Observed, comparison$Predicted)
modeling_no_outliers_residuals = resid(modeling_no_outliers_lm)
# Look into: https://www.statology.org/weighted-least-squares-in-r/
modeling_weights = 1 / modeling_no_outliers_residuals^2
wls_transformed = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers, weights=modeling_weights)
plot(
Alcohol_Percentage ~ Temperature, data=modeling,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
abline(modeling_lm,col="red")
abline(wls_transformed,col="blue",lwd=2)
summary(wls_transformed)
predicted_wls = predict(wls_transformed, data.frame(Temperature=validation[,1]))
comparison_wls = data.frame(Predicted=predicted_wls, Observed=validation[,2])
comparison_wls_lm = lm(Predicted ~ Observed, data=comparison_wls)
plot(Predicted ~ Observed, data=comparison_wls,pch=20)
abline(comparison_wls_lm,col="blue",lwd=2)
cor(comparison_wls$Observed, comparison_wls$Predicted)
predicted_wls = predict(wls_transformed, data.frame(Temperature=validation[,1]))
comparison_wls = data.frame(Predicted=predicted_wls, Observed=validation[,2])
comparison_wls_lm = lm(Predicted ~ Observed, data=comparison_wls, weights=modeling_weights)
predicted_wls = predict(wls_transformed, data.frame(Temperature=validation[,1]), weights=modeling_weights)
comparison_wls = data.frame(Predicted=predicted_wls, Observed=validation[,2])
comparison_wls_lm = lm(Predicted ~ Observed, data=comparison_wls)
plot(Predicted ~ Observed, data=comparison_wls,pch=20)
abline(comparison_wls_lm,col="blue",lwd=2)
cor(comparison_wls$Observed, comparison_wls$Predicted)
predicted_wls = predict(wls_transformed, data.frame(Temperature=validation[,1]))
comparison_wls = data.frame(Predicted=predicted_wls, Observed=validation[,2])
comparison_wls_lm = lm(Predicted ~ Observed, data=comparison_wls)
plot(Predicted ~ Observed, data=comparison_wls,pch=20)
abline(comparison_wls_lm,col="blue",lwd=2)
cor(comparison_wls$Observed, comparison_wls$Predicted)
confint(comparison_wls_lm, level=0.95)
wls_conf_int = confint(comparison_wls_lm, level=0.95)
wls_conf_int.plot()
confint.plot(Predicted~Observed, data=comparison_wls_lm)
plot.confint(Predicted~Observed, data=comparison_wls_lm)
conf_int = predict(modeling_no_outliers_lm, interval="prediction", levle=0.95)
conf_int = cbind(wls_transformed, conf_int)
points(exp(conf_int[,1]), exp(conf_int[,3]), type="l", lty=2, col=3)
conf_int = predict(modeling_no_outliers_lm, interval="prediction", level=0.95)
conf_int = cbind(wls_transformed, conf_int)
points(exp(conf_int[,1]), exp(conf_int[,3]), type="l", lty=2, col=3)
conf_int = predict(modeling_no_outliers_lm, interval="prediction", level=0.95)
conf_int = cbind(wls_transformed, conf_int)
conf_int = predict(modeling_no_outliers_lm, interval="prediction", level=0.95)
# conf_int = cbind(wls_transformed, conf_int)
points(exp(conf_int[,1]), exp(conf_int[,3]), type="l", lty=2, col=3)
modeling_no_outliers = modeling[modeling$Alcohol_Percentage >= 0,]
plot(
Alcohol_Percentage ~ Temperature, data=modeling_no_outliers,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
modeling_no_outliers_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers)
abline(modeling_no_outliers_lm, col="red")
summary(modeling_no_outliers_lm)
conf_int = predict(modeling_no_outliers_lm, interval="prediction", level=0.95)
# conf_int = cbind(wls_transformed, conf_int)
points(exp(conf_int[,1]), exp(conf_int[,3]), type="l", lty=2, col=3)
plot(
Alcohol_Percentage ~ Temperature, data=modeling_no_outliers,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
modeling_no_outliers_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers)
abline(modeling_no_outliers_lm, col="red")
conf_int = predict(modeling_no_outliers_lm, interval="prediction", level=0.95)
# conf_int = cbind(wls_transformed, conf_int)
points(exp(conf_int[,1]), exp(conf_int[,3]), type="l", lty=2, col=3)
plot(
Alcohol_Percentage ~ Temperature, data=modeling_no_outliers,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
modeling_no_outliers_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers)
abline(modeling_no_outliers_lm, col="red")
conf_int = predict(modeling_no_outliers_lm, interval="prediction", level=0.95)
# conf_int = cbind(wls_transformed, conf_int)
points(exp(conf_int[,1]), exp(conf_int[,3]), type="l", lty=2, col=3)
points(exp(conf_int[,1]), exp(conf_int[,4]), type="l", lty=2, col = 3)
plot(
Alcohol_Percentage ~ Temperature, data=modeling_no_outliers,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
modeling_no_outliers_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers)
abline(modeling_no_outliers_lm, col="red")
conf_int = predict(modeling_no_outliers_lm, interval="prediction", level=0.95)
# conf_int = cbind(wls_transformed, conf_int)
points(exp(conf_int[,1]), exp(conf_int[,3]), type="l", lty=2, col=3)
# points(exp(conf_int[,1]), exp(conf_int[,4]), type="l", lty=2, col = 3)
plot(
Alcohol_Percentage ~ Temperature, data=modeling_no_outliers,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
modeling_no_outliers_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers)
abline(modeling_no_outliers_lm, col="red")
conf_int = predict(modeling_no_outliers_lm, interval="prediction", level=0.95)
conf_int = cbind(wls_transformed, conf_int)
points(exp(conf_int[,1]), exp(conf_int[,3]), type="l", lty=2, col=3)
plot(
Alcohol_Percentage ~ Temperature, data=modeling_no_outliers,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
modeling_no_outliers_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers)
abline(modeling_no_outliers_lm, col="red")
conf_int = predict(modeling_no_outliers_lm, interval="prediction", level=0.95)
conf_int = cbind(modeling_no_outliers$Temperature, conf_int)
points(exp(conf_int[,1]), exp(conf_int[,3]), type="l", lty=2, col=3)
# points(exp(conf_int[,1]), exp(conf_int[,4]), type="l", lty=2, col = 3)
plot(
Alcohol_Percentage ~ Temperature, data=modeling_no_outliers,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
modeling_no_outliers_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers)
abline(modeling_no_outliers_lm, col="red")
conf_int = predict(modeling_no_outliers_lm, interval="prediction", level=0.95)
conf_int = cbind(modeling_no_outliers$Temperature, conf_int)
conf_int = conf_int[order(conf_int[,1]),]
points(exp(conf_int[,1]), exp(conf_int[,3]), type="l", lty=2, col=3)
# points(exp(conf_int[,1]), exp(conf_int[,4]), type="l", lty=2, col = 3)
plot(
Alcohol_Percentage ~ Temperature, data=modeling_no_outliers,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
modeling_no_outliers_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers)
abline(modeling_no_outliers_lm, col="red")
conf_int = predict(modeling_no_outliers_lm, interval="prediction", level=0.95)
conf_int = cbind(modeling_no_outliers$Temperature, conf_int)
conf_int = conf_int[order(conf_int[,1]),]
points(conf_int[,1], conf_int[,3], type="l", lty=2, col=3)
# points(exp(conf_int[,1]), exp(conf_int[,4]), type="l", lty=2, col = 3)
plot(
Alcohol_Percentage ~ Temperature, data=modeling_no_outliers,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
modeling_no_outliers_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers)
abline(modeling_no_outliers_lm, col="red")
conf_int = predict(modeling_no_outliers_lm, interval="prediction", level=0.95)
conf_int = cbind(modeling_no_outliers$Temperature, conf_int)
conf_int = conf_int[order(conf_int[,1]),]
points(conf_int[,1], conf_int[,3], type="l", lty=2, col=3)
points(conf_int[,1], conf_int[,4], type="l", lty=2, col = 3)
plot(
Alcohol_Percentage ~ Temperature, data=modeling_no_outliers,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
modeling_no_outliers_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers)
abline(wls_transformed,col="blue",lwd=2)
conf_int = predict(modeling_no_outliers_lm, interval="prediction", level=0.95)
conf_int = cbind(modeling_no_outliers$Temperature, conf_int)
conf_int = conf_int[order(conf_int[,1]),]
points(conf_int[,1], conf_int[,3], type="l", lty=2, col=3)
points(conf_int[,1], conf_int[,4], type="l", lty=2, col = 3)
modeling_no_outliers_residuals = resid(modeling_no_outliers_lm)
# Look into: https://www.statology.org/weighted-least-squares-in-r/
modeling_weights = 1 / modeling_no_outliers_residuals^2
wls_transformed = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers, weights=modeling_weights)
summary(wls_transformed)
plot(
Alcohol_Percentage ~ Temperature, data=modeling,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
abline(modeling_lm,col="red")
abline(wls_transformed,col="blue",lwd=2)
summary(wls_transformed)
modeling_no_outliers_residuals = resid(modeling_no_outliers_lm)
# Look into: https://www.statology.org/weighted-least-squares-in-r/
modeling_weights = 1 / modeling_no_outliers_residuals^2
wls_transformed = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers, weights=modeling_weights)
summary(modeling_no_outliers_lm)
summary(wls_transformed)
plot(
Alcohol_Percentage ~ Temperature, data=modeling,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
abline(modeling_lm,col="red")
abline(wls_transformed,col="blue",lwd=2)
summary(wls_transformed)
fitted
modeling_no_outliers_residuals = resid(modeling_no_outliers_lm)
# Look into: https://www.statology.org/weighted-least-squares-in-r/
#modeling_weights = 1 / modeling_no_outliers_residuals^2
modeling_weights = fitted( lm(abs(residuals(modeling_no_outliers_lm))~fitted(modeling_no_outliers_lm)) )^2
wls_transformed = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers, weights=modeling_weights)
summary(modeling_no_outliers_lm)
summary(wls_transformed)
plot(
Alcohol_Percentage ~ Temperature, data=modeling,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
abline(modeling_lm,col="red")
abline(wls_transformed,col="blue",lwd=2)
summary(wls_transformed)
predicted_wls = predict(wls_transformed, data.frame(Temperature=validation[,1]))
comparison_wls = data.frame(Predicted=predicted_wls, Observed=validation[,2])
comparison_wls_lm = lm(Predicted ~ Observed, data=comparison_wls)
plot(Predicted ~ Observed, data=comparison_wls,pch=20)
abline(comparison_wls_lm,col="blue",lwd=2)
cor(comparison_wls$Observed, comparison_wls$Predicted)
predicted_wls = predict(wls_transformed, data.frame(Temperature=validation[,1]))
comparison_wls = data.frame(Predicted=predicted_wls, Observed=validation[,2])
comparison_wls_lm = lm(Predicted ~ Observed, data=comparison_wls)
plot(Predicted ~ Observed, data=comparison_wls,pch=20)
abline(comparison_wls_lm,col="blue",lwd=2)
cor(comparison_wls$Observed, comparison_wls$Predicted)
knitr::opts_chunk$set(echo = TRUE)
modeling = read.table("./modeling_data.txt",sep="\t",header=TRUE)
modeling_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling)
plot(
Alcohol_Percentage ~ Temperature, data=modeling,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
abline(modeling_lm,col="red")
qqnorm(resid(modeling_lm),ylim=c(-1,2))
qqline(resid(modeling_lm),col="red")
modeling_no_outliers = modeling[modeling$Alcohol_Percentage >= 0,]
plot(
Alcohol_Percentage ~ Temperature, data=modeling_no_outliers,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
modeling_no_outliers_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers)
abline(modeling_no_outliers_lm, col="red")
summary(modeling_no_outliers_lm)
validation = read.table("./validation_data.txt",sep="\t",header=TRUE)
predicted = predict(modeling_no_outliers_lm, data.frame(Temperature=validation[,1]))
comparison = data.frame(Predicted=predicted, Observed=validation[,2])
comparison_lm = lm(Predicted ~ Observed, data=comparison)
plot(Predicted ~ Observed, data=comparison,pch=20)
abline(comparison_lm,col="red")
cor(comparison$Observed, comparison$Predicted)
modeling_no_outliers_residuals = resid(modeling_no_outliers_lm)
modeling_weights = fitted( lm(abs(residuals(modeling_no_outliers_lm))~fitted(modeling_no_outliers_lm)) )^2
wls_transformed = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers, weights=modeling_weights)
summary(modeling_no_outliers_lm)
summary(wls_transformed)
plot(
Alcohol_Percentage ~ Temperature, data=modeling,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
abline(modeling_lm,col="red")
abline(wls_transformed,col="blue",lwd=2)
summary(wls_transformed)
predicted_wls = predict(wls_transformed, data.frame(Temperature=validation[,1]))
comparison_wls = data.frame(Predicted=predicted_wls, Observed=validation[,2])
comparison_wls_lm = lm(Predicted ~ Observed, data=comparison_wls)
plot(Predicted ~ Observed, data=comparison_wls,pch=20)
abline(comparison_wls_lm,col="blue",lwd=2)
cor(comparison_wls$Observed, comparison_wls$Predicted)
modeling_no_outliers_residuals = resid(modeling_no_outliers_lm)
modeling_weights = fitted( lm(abs(residuals(modeling_no_outliers_lm))~fitted(modeling_no_outliers_lm)) )^2
wls_transformed = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers, weights=modeling_weights)
summary(modeling_no_outliers_lm)
summary(wls_transformed)
plot(
Alcohol_Percentage ~ Temperature, data=modeling,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
abline(modeling_lm,col="red")
abline(wls_transformed,col="blue",lwd=2)
knitr::opts_chunk$set(echo = TRUE)
modeling = read.table("./modeling_data.txt",sep="\t",header=TRUE)
modeling_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling)
plot(
Alcohol_Percentage ~ Temperature, data=modeling,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
abline(modeling_lm,col="red")
qqnorm(resid(modeling_lm),ylim=c(-1,2))
qqline(resid(modeling_lm),col="red")
modeling_no_outliers = modeling[modeling$Alcohol_Percentage >= 0,]
plot(
Alcohol_Percentage ~ Temperature, data=modeling_no_outliers,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
modeling_no_outliers_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers)
abline(modeling_no_outliers_lm, col="red")
summary(modeling_no_outliers_lm)
validation = read.table("./validation_data.txt",sep="\t",header=TRUE)
predicted = predict(modeling_no_outliers_lm, data.frame(Temperature=validation[,1]))
comparison = data.frame(Predicted=predicted, Observed=validation[,2])
comparison_lm = lm(Predicted ~ Observed, data=comparison)
plot(Predicted ~ Observed, data=comparison,pch=20)
abline(comparison_lm,col="red")
cor(comparison$Observed, comparison$Predicted)
predicted_wls = predict(wls_transformed, data.frame(Temperature=validation[,1]))
comparison_wls = data.frame(Predicted=predicted_wls, Observed=validation[,2])
comparison_wls_lm = lm(Predicted ~ Observed, data=comparison_wls)
plot(Predicted ~ Observed, data=comparison_wls,pch=20)
abline(comparison_wls_lm,col="blue",lwd=2)
cor(comparison_wls$Observed, comparison_wls$Predicted)
knitr::opts_chunk$set(echo = TRUE)
modeling_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling)
plot(
Alcohol_Percentage ~ Temperature, data=modeling,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage"
)
abline(modeling_lm,col="red")
modeling_no_outliers = modeling[modeling$Alcohol_Percentage >= 0,]
plot(
Alcohol_Percentage ~ Temperature, data=modeling_no_outliers,
main="Alcohol Percentage vs Temperature",
xlab="Temperature (degrees F)",
ylab="Alcohol Percentage",
ylim=c(2,8)
)
modeling_no_outliers_lm = lm(Alcohol_Percentage ~ Temperature, data=modeling_no_outliers)
abline(modeling_no_outliers_lm, col="red")
summary(modeling_no_outliers_lm)
install.packages("tinytex")
library(tinytex)
remove.packages("tinytex", lib="~/R/x86_64-pc-linux-gnu-library/4.1")
4
setwd("./Desktop/obsidian-s23/Regression463/Problem Sets/Assignment 4/")
knitr::opts_chunk$set(echo = TRUE)
mpg = read.csv("./mpg_data.txt",sep="\t")
save.image("~/Desktop/obsidian-s23/Regression463/Problem Sets/Assignment 4/hw4.RData")
